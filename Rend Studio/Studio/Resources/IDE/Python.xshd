<SyntaxDefinition name="Python" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
  <Color name="String" foreground="#A5C25C" />
  <Color name="MultilineString" foreground="#B5002D" />
  <Color name="DarkHighlight" foreground="#CC7832" />
  <Color name="LightHighlight" foreground="#FFC66D" />
  <Color name="Constants" foreground="#6897BB" />
  <Color name="Keywords" foreground="White" />
  <Color name="Comment" foreground="#777777" />

  <RuleSet>
    <Span color="Comment" begin="#" />
    <Span color="MultilineString" multiline="true" begin="&quot;&quot;&quot;" end="&quot;&quot;&quot;">
      <RuleSet>
        <!-- nested span for escape sequences -->
        <Span begin="\\" end="." />
      </RuleSet>
    </Span>
    <Span color="String" multiline="true" begin="&quot;" end="&quot;">
      <RuleSet>
        <!-- nested span for escape sequences -->
        <Span begin="\\" end="." />
      </RuleSet>
    </Span>
    <Span color="String" multiline="true" begin="'" end="'" >
      <RuleSet>
        <!-- nested span for escape sequences -->
        <Span begin="\\" end="." />
      </RuleSet>
    </Span>

    <!--<MarkPrevious fontWeight="bold" color="Keywords">(</MarkPrevious>-->
    
    <Keywords fontWeight="bold" color="Keywords">
      <Word>assert</Word>
      <Word>del</Word>
      <Word>exec</Word>
      <Word>global</Word>
      <Word>lambda</Word>
      <Word>print</Word>
    </Keywords>
    <Keywords color="DarkHighlight" fontWeight="bold">
      <Word>class</Word>
    </Keywords>
    <Keywords fontWeight="bold" color="Keywords">
      <Word>except</Word>
      <Word>finally</Word>
      <Word>raise</Word>
      <Word>try</Word>
    </Keywords>
    <Keywords fontWeight="bold" color="LightHighlight">
      <Word>def</Word>
    </Keywords>
    <Keywords fontWeight="bold" color="DarkHighlight">
      <Word>import</Word>
      <Word>from</Word>
    </Keywords>
    <Keywords fontWeight="bold" color="Keywords">
      <Word>for</Word>
      <Word>in</Word>
      <Word>while</Word>
    </Keywords>
    <Keywords color="Keywords">
      <Word>break</Word>
      <Word>continue</Word>
      <Word>yield</Word>
      <Word>return</Word>
    </Keywords>
    <Keywords fontWeight="bold" color="Keywords">
      <Word>and</Word>
      <Word>as</Word>
      <Word>is</Word>
      <Word>not</Word>
      <Word>or</Word>
    </Keywords>
    <Keywords color="Comment">
      <Word>pass</Word>
    </Keywords>
    <Keywords fontWeight="bold" color="Keywords">
      <Word>elif</Word>
      <Word>else</Word>
      <Word>if</Word>
    </Keywords>
    <Keywords color="Keywords">
      <Word>with</Word>
    </Keywords>
    <Keywords fontWeight="bold" color="Keywords">
      <Word>True</Word>
      <Word>False</Word>
      <Word>None</Word>
    </Keywords>
    <Keywords fontWeight="bold" color="DarkHighlight">
      <Word>string</Word>
      <Word>int</Word>
      <Word>byte</Word>
      <Word>long</Word>
      <Word>double</Word>
      <Word>float</Word>
      <Word>uint</Word>
      <Word>ubyte</Word>
      <Word>ulong</Word>
      <Word>decimal</Word>
      <Word>true</Word>
      <Word>false</Word>
    </Keywords>

    <Rule color="Constants">
      \b0[xX][0-9a-fA-F]+  # hex number
      |    \b
      (    \d+(\.[0-9]+)?   #number with optional floating point
      |    \.[0-9]+         #or just starting with floating point
      )
      ([eE][+-]?[0-9]+)? # optional exponent
    </Rule>
    <Rule color="LightHighlight">
      \b[A-Z][_A-Za-z]+ # Capitalized words
    </Rule>
    <Rule color="LightHighlight">
      (\s+|^)[@]{1}[a-zA-Z_]+\b
    </Rule>
  </RuleSet>
</SyntaxDefinition>